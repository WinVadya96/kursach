@model kursach.Models.CollectionItem

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Collection", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <blockquote>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @{ if (Model.CollectionOfItem.String1Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.String1Name)
                        @Html.TextBoxFor(model => model.String1Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.String1Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{ if (Model.CollectionOfItem.String2Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.String2Name)
                        @Html.TextBoxFor(model => model.String2Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.String2Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.String3Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.String3Name)
                        @Html.TextBoxFor(model => model.String3Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.String3Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.Number1Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Number1Name)
                        @Html.TextBoxFor(model => model.Number1Value, new { @type = "number", htmlAttributes = new { @class = "form-control" }, @Value = "" })
                        @Html.ValidationMessageFor(model => model.Number1Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.Number2Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Number2Name)
                        @Html.TextBoxFor(model => model.Number2Value, new { @type = "number", htmlAttributes = new { @class = "form-control" }, @Value = "" })
                        @Html.ValidationMessageFor(model => model.Number2Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.Number3Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Number3Name)
                        @Html.TextBoxFor(model => model.Number3Value, new { @type = "number", htmlAttributes = new { @class = "form-control" }, @Value = "" })
                        @Html.ValidationMessageFor(model => model.Number3Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.Date1Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Date1Name)
                        @Html.TextBoxFor(model => model.Date1Value, new { @type = "date", htmlAttributes = new { @class = "form-control" }, @Value = "" })
                        @Html.ValidationMessageFor(model => model.Date1Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.Date2Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Date2Name)
                        @Html.TextBoxFor(model => model.Date2Value, new { @type = "date", htmlAttributes = new { @class = "form-control" }, @Value = "" })
                        @Html.ValidationMessageFor(model => model.Date2Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.Date3Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Date3Name)
                        @Html.TextBoxFor(model => model.Date3Value, new { @type = "date", htmlAttributes = new { @class = "form-control" }, @Value = "" })
                        @Html.ValidationMessageFor(model => model.Date3Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.CheckBox1Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Checkbox1Name)
                        @Html.EditorFor(model => model.Checkbox1Value)
                        @Html.ValidationMessageFor(model => model.Checkbox1Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.CheckBox2Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Checkbox2Name)
                        @Html.EditorFor(model => model.Checkbox2Value)
                        @Html.ValidationMessageFor(model => model.Checkbox2Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.CheckBox3Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.Checkbox3Name)
                        @Html.EditorFor(model => model.Checkbox3Value)
                        @Html.ValidationMessageFor(model => model.Checkbox3Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.MarkdownField1Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.MarkdownField1Name)
                        @Html.TextBoxFor(model => model.Markdown1Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Markdown1Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.MarkdownField2Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.MarkdownField2Name)
                        @Html.TextBoxFor(model => model.Markdown2Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Markdown2Value, "", new { @class = "text-danger" })
                    </div>
                }
            }

            @{
                if (Model.CollectionOfItem.MarkdownField3Visible)
                {
                    <div class="form-group col-md-10">
                        @Html.DisplayFor(model => model.CollectionOfItem.MarkdownField3Name)
                        @Html.TextBoxFor(model => model.Markdown3Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Markdown3Value, "", new { @class = "text-danger" })
                    </div>
                }
            }
        </div>
    </blockquote>

    <div class="form-group col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>
}
<div>
    @Html.ActionLink("Back to List", "GetCollections", "Home")
</div>
